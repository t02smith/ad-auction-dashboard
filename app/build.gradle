/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.12'

    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'java'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation 'org.jetbrains:annotations:20.1.0'

    // Use JUnit test framework.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    //Log4j
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.1'

    implementation group: 'com.univocity', name: 'univocity-parsers', version: '2.9.1'

}

application {
    // Define the main class for the application.
    mainClass = "ad.auction.dashboard.Main"
}

test {

     useJUnitPlatform()

}

javafx {
    version = "17.0.1"
    modules = [ 'javafx.controls' ]
}

jar {

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest { 
        attributes "Main-Class": "ad.auction.dashboard.Main"
    }  

    archiveBaseName = "ad-auction-dashboard"
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}
